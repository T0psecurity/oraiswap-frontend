/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * AssetInfo contract_addr is usually passed from the cw20 hook so we can trust the contract_addr is properly validated.
 */
export type AssetInfo =
  | {
      token: {
        contract_addr: HumanAddr;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      native_token: {
        denom: string;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    };
export type HumanAddr = string;
/**
 * Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.
 *
 * This is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>
 */
export type Binary = string;

export interface InitMsg {
  /**
   * Asset infos
   */
  asset_infos: [AssetInfo, AssetInfo];
  commission_rate?: string | null;
  /**
   * Hook for post initalization
   */
  init_hook?: InitHook | null;
  /**
   * Oracle contract for query oracle information
   */
  oracle_addr: HumanAddr;
  /**
   * Token contract code id for initialization
   */
  token_code_id: number;
  [k: string]: unknown;
}
/**
 * this is to trigger an action after execution
 */
export interface InitHook {
  contract_addr: HumanAddr;
  msg: Binary;
  [k: string]: unknown;
}
