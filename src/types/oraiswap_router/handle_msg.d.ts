/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type HandleMsg =
  | {
      receive: Cw20ReceiveMsg;
      [k: string]: unknown;
    }
  | {
      execute_swap_operations: {
        minimum_receive?: Uint128 | null;
        operations: SwapOperation[];
        to?: HumanAddr | null;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      execute_swap_operation: {
        operation: SwapOperation;
        to?: HumanAddr | null;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      assert_minimum_receive: {
        asset_info: AssetInfo;
        minimum_receive: Uint128;
        prev_balance: Uint128;
        receiver: HumanAddr;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    };
export type Uint128 = string;
/**
 * Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.
 *
 * This is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>
 */
export type Binary = string;
export type HumanAddr = string;
export type SwapOperation = {
  orai_swap: {
    ask_asset_info: AssetInfo;
    offer_asset_info: AssetInfo;
    [k: string]: unknown;
  };
  [k: string]: unknown;
};
/**
 * AssetInfo contract_addr is usually passed from the cw20 hook so we can trust the contract_addr is properly validated.
 */
export type AssetInfo =
  | {
      token: {
        contract_addr: HumanAddr;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      native_token: {
        denom: string;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    };

/**
 * Cw20ReceiveMsg should be de/serialized under `Receive()` variant in a HandleMsg
 */
export interface Cw20ReceiveMsg {
  amount: Uint128;
  msg?: Binary | null;
  sender: HumanAddr;
  [k: string]: unknown;
}
